############################################################
#  	Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler classes. 
# These handlers will be installed during VM startup. Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only show messages at the INFO and above levels.
#handlers = java.util.logging.ConsoleHandler

# To also add the FileHandler, use the following line instead.
handlers = java.util.logging.FileHandler,java.util.logging.ConsoleHandler

# Default global logging level.
# This specifies which kinds of events are logged across all loggers. 
# For any given facility this global level can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level setting to limit messages printed to the console.
.level = CONFIG

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# Default file output is in user's home directory.
java.util.logging.FileHandler.pattern = log/java%u.log
java.util.logging.FileHandler.limit = 500000
java.util.logging.FileHandler.count = 5
java.util.logging.FileHandler.formatter = util.log.FileLogFormatter
java.util.logging.FileHandler.level = CONFIG

# Limit the message that are printed on the console to INFO and above.
java.util.logging.ConsoleHandler.level = FINER
java.util.logging.ConsoleHandler.formatter = util.log.ConsoleLogFormatter

# Log errors (exceptions)
util.log.ErrorLogHandler.pattern = log/error%u.log
util.log.ErrorLogHandler.count = 5
util.log.ErrorLogHandler.formatter = java.util.logging.SimpleFormatter
util.log.ErrorLogHandler.filter = util.log.ErrorFilter
util.log.ErrorLogHandler.level = CONFIG